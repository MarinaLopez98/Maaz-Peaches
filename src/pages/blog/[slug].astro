---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '@layouts/Default.astro';
import { Card } from '@eliancodes/brutal-ui';
import BuyMeCoffee from '@components/generic/BuyMeCoffee.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map((blogpost) => ({
    params: { slug: blogpost.slug },
    props: { blogpost },
  }));
}

interface Props {
  blogpost: CollectionEntry<'blog'>;
}

const { blogpost } = Astro.props;
const { Content } = await blogpost.render();
const { title, description, author } = blogpost.data;
const pubDate = new Date(blogpost.data.pubDate);
---

<Layout title={title} description={description}>
  <main class='bg-#e4a6ca p-6'>
    <article class='max-w-4xl mx-auto'>
      <Card color='#ffffff'>
        <header class='mb-8'>
          <h1 class='text-3xl md:text-5xl lg:text-6xl mb-4 dm-serif'>{title}</h1>
          <div class='flex gap-4 text-sm poppins text-gray-600 mb-4'>
            <time datetime={pubDate.toISOString()}>
              {pubDate.toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
            </time>
            <span>‚Ä¢</span>
            <span>{author}</span>
          </div>
          <div class='bg-gray-50 p-4 rounded-lg border-2 border-black mb-6'>
            <p class='poppins text-lg italic text-gray-700'>{description}</p>
          </div>
        </header>
        <div class='prose prose-lg max-w-none poppins'>
          <Content />
        </div>

        <!-- Sistema de comentarios simplificado -->
        <section class="comments-section" style="margin: 3rem 0 2rem; padding: 2rem; background: linear-gradient(135deg, #fff5f9 0%, #fef9fb 100%); border: 3px solid #e8b4d4; border-radius: 1.5rem; box-shadow: 0 4px 12px rgba(232, 180, 212, 0.15);">
          <div style="text-align: center; margin-bottom: 2rem; padding-bottom: 1.5rem; border-bottom: 2px dashed #f5d4e6;">
            <h3 style="margin: 0 0 0.5rem 0; font-size: 1.75rem; font-weight: 700; color: #d87ba7; font-family: 'DM Serif Display', serif;">Comentarios</h3>
            <p style="margin: 0; font-size: 0.95rem; color: #9f7091; font-family: 'Poppins', sans-serif; font-style: italic; line-height: 1.6; max-width: 800px; margin: 0 auto;">Si no te sientes escuchado, aqu√≠ tienes el espacio perfecto. No te escucharemos, pero ten por seguro que te leer√©.</p>
          </div>

          <!-- Formulario principal -->
          <div style="margin-bottom: 2rem;">
            <form id="commentForm" style="display: flex; flex-direction: column; gap: 1.25rem;">
              <input type="hidden" name="access_key" value="ac372efb-3a75-42da-9aa0-a90846659aa4">
              <input type="hidden" name="subject" value="üí¨ Nuevo comentario en el blog">
              <input type="hidden" name="from_name" value="Blog Maaz-Peaches">

              <div style="display: flex; flex-direction: column; gap: 0.5rem;">
                <label style="font-size: 0.9rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="name">Nombre</label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  placeholder="Tu nombre (o d√©jalo vac√≠o para comentar an√≥nimamente)"
                  style="padding: 0.75rem 1rem; border: 2px solid #f5d4e6; border-radius: 0.75rem; font-size: 0.95rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091; transition: all 0.3s ease;"
                />
              </div>

              <div style="display: flex; flex-direction: column; gap: 0.5rem;">
                <label style="font-size: 0.9rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="comment">Comentario</label>
                <textarea
                  id="comment"
                  name="comment"
                  rows="4"
                  placeholder="Escribe tu comentario aqu√≠..."
                  required
                  style="padding: 0.75rem 1rem; border: 2px solid #f5d4e6; border-radius: 0.75rem; font-size: 0.95rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091; transition: all 0.3s ease; resize: vertical; min-height: 100px;"
                ></textarea>
              </div>

              <button type="submit" style="display: inline-flex; align-items: center; justify-content: center; gap: 0.5rem; padding: 0.875rem 1.75rem; background: linear-gradient(135deg, #e8b4d4 0%, #f5d4e6 100%); color: #6b4a5a; border: 2px solid #d87ba7; border-radius: 0.875rem; font-size: 1rem; font-weight: 600; font-family: 'Poppins', sans-serif; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 2px 8px rgba(232, 180, 212, 0.25); align-self: flex-start;">
                <span>Enviar comentario</span>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <line x1="22" y1="2" x2="11" y2="13"></line>
                  <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                </svg>
              </button>
            </form>
          </div>

          <!-- Lista de comentarios -->
          <div id="commentsList" style="margin-top: 2rem; padding-top: 2rem; border-top: 2px dashed #f5d4e6;"></div>
        </section>

        <BuyMeCoffee username="rollingpeaches" />

        <div class='flex justify-center mt-6'>
          <img
            src='https://raw.githubusercontent.com/MarinaLopez98/Maaz-Peaches/master/src/assets/Peach.jpg'
            alt='Ilustraci√≥n Peach'
            class='rounded-lg border-2 border-black shadow-lg'
            style='max-width: 300px; width: 100%;'
            loading='lazy'
          />
        </div>

      </Card>
    </article>
  </main>
</Layout>

<!-- Script simplificado y funcional -->
<script>
  console.log('üöÄ Iniciando sistema de comentarios...');

  // Funci√≥n principal
  function initComments() {
    console.log('üìù Inicializando...');

    const form = document.getElementById('commentForm');
    const commentsList = document.getElementById('commentsList');

    if (!form || !commentsList) {
      console.error('‚ùå Elementos no encontrados');
      return;
    }

    console.log('‚úÖ Sistema iniciado');

    // Cargar comentarios
    loadComments();

    // Manejar formulario
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      console.log('üî• Formulario enviado');

      const nombre = document.getElementById('name')?.value?.trim() || 'An√≥nimo';
      const texto = document.getElementById('comment')?.value?.trim();

      if (!texto) {
        alert('Escribe un comentario');
        return;
      }

      const comentario = {
        id: Date.now().toString(),
        nombre: nombre,
        texto: texto,
        fecha: new Date().toISOString(),
        respuestas: []
      };

      saveComment(comentario);
      showComment(comentario);
      form.reset();

      sendEmail(comentario);
      console.log('‚úÖ Comentario guardado');
    });
  }

  function loadComments() {
    const clave = 'comentarios_' + window.location.pathname;
    let comentarios = JSON.parse(localStorage.getItem(clave) || '[]');

    // Migrar comentarios antiguos
    comentarios = comentarios.map((c, i) => {
      if (!c.id) {
        return {
          id: `migrado-${i}`,
          nombre: c.nombre || 'An√≥nimo',
          texto: c.texto || '',
          fecha: c.fecha || new Date().toISOString(),
          respuestas: []
        };
      }
      if (!c.respuestas) c.respuestas = [];
      return c;
    });

    localStorage.setItem(clave, JSON.stringify(comentarios));
    comentarios.forEach(showComment);
  }

  function saveComment(comentario) {
    const clave = 'comentarios_' + window.location.pathname;
    const comentarios = JSON.parse(localStorage.getItem(clave) || '[]');
    comentarios.push(comentario);
    localStorage.setItem(clave, JSON.stringify(comentarios));
  }

  function showComment(comentario) {
    const div = document.createElement('div');
    div.className = 'comment-item';
    div.dataset.commentId = comentario.id;

    const fecha = new Date(comentario.fecha);
    const fechaTexto = fecha.toLocaleDateString('es-ES', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });

    let html = `
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem; padding-bottom: 0.75rem; border-bottom: 1px solid #f5d4e6;">
        <span style="font-weight: 600; color: #d87ba7; font-family: 'Poppins', sans-serif; font-size: 0.95rem;">${escapeHtml(comentario.nombre)}</span>
        <span style="font-size: 0.8rem; color: #b89aa8; font-family: 'Poppins', sans-serif;">${fechaTexto}</span>
      </div>
      <p style="color: #9f7091; font-family: 'Poppins', sans-serif; font-size: 0.95rem; line-height: 1.6; margin: 0 0 0.75rem 0;">${escapeHtml(comentario.texto)}</p>
      <button onclick="showReplyForm('${comentario.id}')" style="display: inline-flex; align-items: center; gap: 0.25rem; padding: 0.35rem 0.75rem; background: linear-gradient(135deg, #fef9fb 0%, #fff5f9 100%); color: #d87ba7; border: 1.5px solid #f5d4e6; border-radius: 0.5rem; font-size: 0.85rem; font-weight: 500; font-family: 'Poppins', sans-serif; cursor: pointer; transition: all 0.3s ease;">
        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 10 4 15 9 20"></polyline>
          <path d="M20 4v7a4 4 0 0 1-4 4H4"></path>
        </svg>
        Responder
      </button>
    `;

    // Respuestas
    if (comentario.respuestas && comentario.respuestas.length > 0) {
      html += '<div style="margin-top: 1rem; margin-left: 2rem; padding-left: 1rem; border-left: 3px solid #f5d4e6;">';
      comentario.respuestas.forEach(respuesta => {
        const fechaResp = new Date(respuesta.fecha);
        const fechaRespTexto = fechaResp.toLocaleDateString('es-ES', {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        });

        html += `
          <div style="padding: 1rem; margin-bottom: 0.75rem; background: linear-gradient(135deg, #fef9fb 0%, #fff 100%); border: 2px solid #f9e8f0; border-radius: 0.875rem;">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem; padding-bottom: 0.75rem; border-bottom: 1px solid #f9e8f0;">
              <span style="font-weight: 600; color: #d87ba7; font-family: 'Poppins', sans-serif; font-size: 0.9rem;">${escapeHtml(respuesta.nombre)}</span>
              <span style="font-size: 0.75rem; color: #c4a5b4; font-family: 'Poppins', sans-serif;">${fechaRespTexto}</span>
            </div>
            <p style="color: #9f7091; font-family: 'Poppins', sans-serif; font-size: 0.9rem; line-height: 1.5; margin: 0;">${escapeHtml(respuesta.texto)}</p>
          </div>
        `;
      });
      html += '</div>';
    }

    // Formulario de respuesta
    html += `
      <div id="reply-form-${comentario.id}" style="margin-top: 1rem; padding: 1rem; background: linear-gradient(135deg, #fef9fb 0%, #fff 100%); border: 2px dashed #f5d4e6; border-radius: 0.875rem; display: none;">
        <div style="font-size: 0.9rem; font-weight: 600; color: #9f7091; margin-bottom: 0.75rem; font-family: 'Poppins', sans-serif;">Respondiendo a ${escapeHtml(comentario.nombre)}</div>
        <div style="display: flex; flex-direction: column; gap: 0.5rem; margin-bottom: 0.75rem;">
          <label style="font-size: 0.85rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="reply-name-${comentario.id}">Nombre</label>
          <input
            type="text"
            id="reply-name-${comentario.id}"
            placeholder="Tu nombre (o d√©jalo vac√≠o)"
            style="padding: 0.5rem 0.75rem; border: 1.5px solid #f5d4e6; border-radius: 0.5rem; font-size: 0.9rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091;"
          />
        </div>
        <div style="display: flex; flex-direction: column; gap: 0.5rem; margin-bottom: 0.75rem;">
          <label style="font-size: 0.85rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="reply-text-${comentario.id}">Respuesta</label>
          <textarea
            id="reply-text-${comentario.id}"
            rows="3"
            placeholder="Escribe tu respuesta aqu√≠..."
            required
            style="padding: 0.5rem 0.75rem; border: 1.5px solid #f5d4e6; border-radius: 0.5rem; font-size: 0.9rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091; resize: vertical;"
          ></textarea>
        </div>
        <div style="display: flex; gap: 0.5rem;">
          <button onclick="submitReply('${comentario.id}')" style="padding: 0.5rem 1rem; font-size: 0.85rem; background: linear-gradient(135deg, #e8b4d4 0%, #f5d4e6 100%); color: #6b4a5a; border: 1.5px solid #d87ba7; border-radius: 0.5rem; font-weight: 600; font-family: 'Poppins', sans-serif; cursor: pointer;">Enviar respuesta</button>
          <button onclick="hideReplyForm('${comentario.id}')" style="padding: 0.5rem 1rem; font-size: 0.85rem; background: #fff; color: #9f7091; border: 1.5px solid #f5d4e6; border-radius: 0.5rem; font-weight: 500; font-family: 'Poppins', sans-serif; cursor: pointer;">Cancelar</button>
        </div>
      </div>
    `;

    div.innerHTML = html;
    div.style.cssText = 'padding: 1.25rem; margin-bottom: 1rem; background: #ffffff; border: 2px solid #f5d4e6; border-radius: 1rem; transition: all 0.3s ease;';

    document.getElementById('commentsList').appendChild(div);
  }

  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  function sendEmail(comentario) {
    const formData = new FormData();
    formData.append('access_key', 'ac372efb-3a75-42da-9aa0-a90846659aa4');
    formData.append('subject', 'üí¨ Nuevo comentario en el blog');
    formData.append('from_name', 'Blog Maaz-Peaches');
    formData.append('name', comentario.nombre);
    formData.append('comment', comentario.texto);
    formData.append('page_url', window.location.href);

    fetch('https://api.web3forms.com/submit', {
      method: 'POST',
      body: formData
    }).catch(err => console.warn('Email no enviado:', err));
  }

  // Funciones globales para respuestas
  window.showReplyForm = function(commentId) {
    document.querySelectorAll('[id^="reply-form-"]').forEach(form => {
      form.style.display = 'none';
    });

    const form = document.getElementById(`reply-form-${commentId}`);
    if (form) {
      form.style.display = 'block';
      const textarea = document.getElementById(`reply-text-${commentId}`);
      if (textarea) textarea.focus();
    }
  };

  window.hideReplyForm = function(commentId) {
    const form = document.getElementById(`reply-form-${commentId}`);
    if (form) {
      form.style.display = 'none';
      const nameInput = document.getElementById(`reply-name-${commentId}`);
      const textInput = document.getElementById(`reply-text-${commentId}`);
      if (nameInput) nameInput.value = '';
      if (textInput) textInput.value = '';
    }
  };

  window.submitReply = function(commentId) {
    const nameInput = document.getElementById(`reply-name-${commentId}`);
    const textInput = document.getElementById(`reply-text-${commentId}`);

    const nombre = nameInput?.value?.trim() || 'An√≥nimo';
    const texto = textInput?.value?.trim();

    if (!texto) {
      alert('Escribe una respuesta');
      return;
    }

    const clave = 'comentarios_' + window.location.pathname;
    const comentarios = JSON.parse(localStorage.getItem(clave) || '[]');

    const comentarioIndex = comentarios.findIndex(c => c.id === commentId);
    if (comentarioIndex !== -1) {
      if (!comentarios[comentarioIndex].respuestas) {
        comentarios[comentarioIndex].respuestas = [];
      }

      const respuesta = {
        id: Date.now().toString(),
        nombre: nombre,
        texto: texto,
        fecha: new Date().toISOString()
      };

      comentarios[comentarioIndex].respuestas.push(respuesta);
      localStorage.setItem(clave, JSON.stringify(comentarios));

      document.getElementById('commentsList').innerHTML = '';
      comentarios.forEach(showComment);

      console.log('‚úÖ Respuesta guardada');
    }
  };

  // Iniciar cuando el DOM est√© listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initComments);
  } else {
    initComments();
  }
