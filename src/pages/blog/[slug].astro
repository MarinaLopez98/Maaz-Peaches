---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '@layouts/Default.astro';
import { Card } from '@eliancodes/brutal-ui';
import BuyMeCoffee from '@components/generic/BuyMeCoffee.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map((blogpost) => ({
    params: { slug: blogpost.slug },
    props: { blogpost },
  }));
}

interface Props {
  blogpost: CollectionEntry<'blog'>;
}

const { blogpost } = Astro.props;
const { Content } = await blogpost.render();
const { title, description, author } = blogpost.data;
const pubDate = new Date(blogpost.data.pubDate);
---

<Layout title={title} description={description}>
  <main class='bg-#e4a6ca p-6'>
    <article class='max-w-4xl mx-auto'>
      <Card color='#ffffff'>
        <header class='mb-8'>
          <h1 class='text-3xl md:text-5xl lg:text-6xl mb-4 dm-serif'>{title}</h1>
          <div class='flex gap-4 text-sm poppins text-gray-600 mb-4'>
            <time datetime={pubDate.toISOString()}>
              {pubDate.toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
            </time>
            <span>‚Ä¢</span>
            <span>{author}</span>
          </div>
          <div class='bg-gray-50 p-4 rounded-lg border-2 border-black mb-6'>
            <p class='poppins text-lg italic text-gray-700'>{description}</p>
          </div>
        </header>
        <div class='prose prose-lg max-w-none poppins'>
          <Content />
        </div>
        
        <!-- Comentarios integrados directamente en el HTML -->
        <section class="comments-section" style="margin: 3rem 0 2rem; padding: 2rem; background: linear-gradient(135deg, #fff5f9 0%, #fef9fb 100%); border: 3px solid #e8b4d4; border-radius: 1.5rem; box-shadow: 0 4px 12px rgba(232, 180, 212, 0.15);">
          <div style="text-align: center; margin-bottom: 2rem; padding-bottom: 1.5rem; border-bottom: 2px dashed #f5d4e6;">
            <h3 style="margin: 0 0 0.5rem 0; font-size: 1.75rem; font-weight: 700; color: #d87ba7; font-family: 'DM Serif Display', serif;">Comentarios</h3>
            <p style="margin: 0; font-size: 0.95rem; color: #9f7091; font-family: 'Poppins', sans-serif; font-style: italic; line-height: 1.6; max-width: 800px; margin: 0 auto;">Si no te sientes escuchado, aqu√≠ tienes el espacio perfecto. No te escucharemos, pero ten por seguro que te leer√©.</p>
          </div>

          <div style="margin-bottom: 2rem;">
            <form id="commentForm" style="display: flex; flex-direction: column; gap: 1.25rem;">
              <input type="hidden" name="access_key" value="ac372efb-3a75-42da-9aa0-a90846659aa4">
              <input type="hidden" name="subject" value="üí¨ Nuevo comentario en el blog">
              <input type="hidden" name="from_name" value="Blog Maaz-Peaches">

              <div style="display: flex; flex-direction: column; gap: 0.5rem;">
                <label style="font-size: 0.9rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="name">Nombre</label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  placeholder="Tu nombre (o d√©jalo vac√≠o para comentar an√≥nimamente)"
                  style="padding: 0.75rem 1rem; border: 2px solid #f5d4e6; border-radius: 0.75rem; font-size: 0.95rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091; transition: all 0.3s ease;"
                />
              </div>

              <div style="display: flex; flex-direction: column; gap: 0.5rem;">
                <label style="font-size: 0.9rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="comment">Comentario</label>
                <textarea
                  id="comment"
                  name="comment"
                  rows="4"
                  placeholder="Escribe tu comentario aqu√≠..."
                  required
                  style="padding: 0.75rem 1rem; border: 2px solid #f5d4e6; border-radius: 0.75rem; font-size: 0.95rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091; transition: all 0.3s ease; resize: vertical; min-height: 100px;"
                ></textarea>
              </div>

              <button type="submit" style="display: inline-flex; align-items: center; justify-content: center; gap: 0.5rem; padding: 0.875rem 1.75rem; background: linear-gradient(135deg, #e8b4d4 0%, #f5d4e6 100%); color: #6b4a5a; border: 2px solid #d87ba7; border-radius: 0.875rem; font-size: 1rem; font-weight: 600; font-family: 'Poppins', sans-serif; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 2px 8px rgba(232, 180, 212, 0.25); align-self: flex-start;">
                <span>Enviar comentario</span>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <line x1="22" y1="2" x2="11" y2="13"></line>
                  <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                </svg>
              </button>
            </form>
          </div>

          <div id="commentsList" style="margin-top: 2rem; padding-top: 2rem; border-top: 2px dashed #f5d4e6;"></div>
        </section>

        <style>
          /* Estilos adicionales para respuestas */
          .reply-button {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            padding: 0.35rem 0.75rem;
            background: linear-gradient(135deg, #fef9fb 0%, #fff5f9 100%);
            color: #d87ba7;
            border: 1.5px solid #f5d4e6;
            border-radius: 0.5rem;
            font-size: 0.85rem;
            font-weight: 500;
            font-family: 'Poppins', sans-serif;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 0.5rem;
          }

          .reply-button:hover {
            background: linear-gradient(135deg, #f5d4e6 0%, #e8b4d4 100%);
            border-color: #e8b4d4;
            transform: translateY(-1px);
            box-shadow: 0 2px 6px rgba(232, 180, 212, 0.2);
          }

          .replies-container {
            margin-top: 1rem;
            margin-left: 2rem;
            padding-left: 1rem;
            border-left: 3px solid #f5d4e6;
          }

          .reply-item {
            padding: 1rem;
            margin-bottom: 0.75rem;
            background: linear-gradient(135deg, #fef9fb 0%, #fff 100%);
            border: 2px solid #f9e8f0;
            border-radius: 0.875rem;
            transition: all 0.3s ease;
          }

          .reply-item:hover {
            border-color: #f5d4e6;
            box-shadow: 0 1px 6px rgba(232, 180, 212, 0.1);
          }

          .reply-form {
            margin-top: 1rem;
            padding: 1rem;
            background: linear-gradient(135deg, #fef9fb 0%, #fff 100%);
            border: 2px dashed #f5d4e6;
            border-radius: 0.875rem;
            display: none;
          }

          .reply-form.active {
            display: block;
            animation: slideDown 0.3s ease;
          }

          @keyframes slideDown {
            from {
              opacity: 0;
              transform: translateY(-10px);
            }
            to {
              opacity: 1;
              transform: translateY(0);
            }
          }

          .reply-form-header {
            font-size: 0.9rem;
            font-weight: 600;
            color: #9f7091;
            margin-bottom: 0.75rem;
            font-family: 'Poppins', sans-serif;
          }

          .cancel-reply {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            padding: 0.35rem 0.75rem;
            background: #fff;
            color: #9f7091;
            border: 1.5px solid #f5d4e6;
            border-radius: 0.5rem;
            font-size: 0.85rem;
            font-weight: 500;
            font-family: 'Poppins', sans-serif;
            cursor: pointer;
            transition: all 0.3s ease;
          }

          .cancel-reply:hover {
            background: #fef9fb;
            border-color: #e8b4d4;
          }

          .comment-item {
            padding: 1.25rem;
            margin-bottom: 1rem;
            background: #ffffff;
            border: 2px solid #f5d4e6;
            border-radius: 1rem;
            transition: all 0.3s ease;
          }

          .comment-item:hover {
            border-color: #e8b4d4;
            box-shadow: 0 2px 8px rgba(232, 180, 212, 0.15);
          }

          @media (max-width: 640px) {
            .comments-section {
              padding: 1.5rem;
            }
            .submit-button {
              width: 100%;
            }
            .replies-container {
              margin-left: 1rem;
              padding-left: 0.5rem;
            }
            .reply-item {
              padding: 0.75rem;
            }
          }
        </style>
        
        <BuyMeCoffee username="rollingpeaches" />
        
        <div class='flex justify-center mt-6'>
          <img 
            src='https://raw.githubusercontent.com/MarinaLopez98/Maaz-Peaches/master/src/assets/Peach.jpg' 
            alt='Ilustraci√≥n Peach' 
            class='rounded-lg border-2 border-black shadow-lg'
            style='max-width: 300px; width: 100%;'
            loading='lazy'
          />
        </div>
        
      </Card>
    </article>
  </main>
</Layout>

<!-- Script que se ejecuta inmediatamente -->
<script>
  console.log('üöÄ Iniciando sistema de comentarios...');

  // Funci√≥n que se ejecuta cuando todo est√° listo
  function initComments() {
    console.log('üìù Buscando elementos...');

    const form = document.getElementById('commentForm');
    const commentsList = document.getElementById('commentsList');

    if (!form) {
      console.error('‚ùå No se encontr√≥ el formulario');
      return;
    }

    if (!commentsList) {
      console.error('‚ùå No se encontr√≥ la lista de comentarios');
      return;
    }

    // Limpiar localStorage para forzar nuevo formato
    const clave = 'comentarios_' + window.location.pathname;
    localStorage.removeItem(clave);
    console.log('üßπ localStorage limpiado para nuevo formato');

    // Manejar env√≠o del formulario
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      console.log('üî• Formulario enviado!');

      const nombre = document.getElementById('name')?.value?.trim() || 'An√≥nimo';
      const texto = document.getElementById('comment')?.value?.trim();

      console.log('üë§ Nombre:', nombre);
      console.log('üí¨ Comentario:', texto);

      if (!texto) {
        alert('Por favor, escribe un comentario antes de enviar.');
        return;
      }

      // Crear objeto de comentario
      const comentario = {
        id: Date.now().toString(),
        nombre: nombre,
        texto: texto,
        fecha: new Date().toISOString(),
        respuestas: []
      };

      console.log('üíæ Guardando comentario:', comentario);

      // Guardar en localStorage
      const clave = 'comentarios_' + window.location.pathname;
      const comentariosGuardados = JSON.parse(localStorage.getItem(clave) || '[]');
      comentariosGuardados.push(comentario);
      localStorage.setItem(clave, JSON.stringify(comentariosGuardados));

      console.log('‚úÖ Comentario guardado en localStorage');

      // Mostrar comentario inmediatamente
      mostrarComentario(comentario);

      // Limpiar formulario
      form.reset();
      console.log('üßπ Formulario limpiado');

      // Enviar email en segundo plano
      enviarEmail(comentario);

      console.log('üéâ Comentario procesado completamente');
    });

    function loadComments() {
      const clave = 'comentarios_' + window.location.pathname;
      let comentarios = JSON.parse(localStorage.getItem(clave) || '[]');

      // Migrar comentarios antiguos al nuevo formato
      comentarios = comentarios.map((comentario, index) => {
        if (!comentario.id) {
          return {
            id: `migrated-${Date.now()}-${index}`,
            nombre: comentario.nombre || 'An√≥nimo',
            texto: comentario.texto || '',
            fecha: comentario.fecha || new Date().toISOString(),
            respuestas: []
          };
        }
        // Asegurar que tiene el campo respuestas
        if (!comentario.respuestas) {
          comentario.respuestas = [];
        }
        return comentario;
      });

      // Guardar la versi√≥n migrada
      localStorage.setItem(clave, JSON.stringify(comentarios));

      console.log('üìö Comentarios cargados (migrados):', comentarios.length);
      comentarios.forEach(mostrarComentario);
    }

    function mostrarComentario(comentario) {
      console.log('üé® Mostrando comentario:', comentario.nombre);

      const div = document.createElement('div');
      div.className = 'comment-item';
      div.dataset.commentId = comentario.id;

      // Crear HTML para respuestas
      let respuestasHTML = '';
      if (comentario.respuestas && comentario.respuestas.length > 0) {
        respuestasHTML = '<div class="replies-container">';
        comentario.respuestas.forEach((respuesta) => {
          respuestasHTML += `
            <div class="reply-item">
              <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem; padding-bottom: 0.75rem; border-bottom: 1px solid #f9e8f0;">
                <span style="font-weight: 600; color: #d87ba7; font-family: 'Poppins', sans-serif; font-size: 0.9rem;">${escapeHtml(respuesta.nombre)}</span>
                <span style="font-size: 0.75rem; color: #c4a5b4; font-family: 'Poppins', sans-serif;">${formatDate(respuesta.fecha)}</span>
              </div>
              <p style="color: #9f7091; font-family: 'Poppins', sans-serif; font-size: 0.9rem; line-height: 1.5; margin: 0;">${escapeHtml(respuesta.texto)}</p>
            </div>
          `;
        });
        respuestasHTML += '</div>';
      }

      // Crear formulario de respuesta
      const replyFormHTML = `
        <div class="reply-form" id="reply-form-${comentario.id}">
          <div class="reply-form-header">Respondiendo a ${escapeHtml(comentario.nombre)}</div>
          <div style="display: flex; flex-direction: column; gap: 0.5rem; margin-bottom: 0.75rem;">
            <label style="font-size: 0.85rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="reply-name-${comentario.id}">Nombre</label>
            <input
              type="text"
              id="reply-name-${comentario.id}"
              placeholder="Tu nombre (o d√©jalo vac√≠o para comentar an√≥nimamente)"
              style="padding: 0.5rem 0.75rem; border: 1.5px solid #f5d4e6; border-radius: 0.5rem; font-size: 0.9rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091;"
            />
          </div>
          <div style="display: flex; flex-direction: column; gap: 0.5rem; margin-bottom: 0.75rem;">
            <label style="font-size: 0.85rem; font-weight: 600; color: #9f7091; font-family: 'Poppins', sans-serif;" for="reply-text-${comentario.id}">Respuesta</label>
            <textarea
              id="reply-text-${comentario.id}"
              rows="3"
              placeholder="Escribe tu respuesta aqu√≠..."
              required
              style="padding: 0.5rem 0.75rem; border: 1.5px solid #f5d4e6; border-radius: 0.5rem; font-size: 0.9rem; font-family: 'Poppins', sans-serif; background: #ffffff; color: #9f7091; resize: vertical;"
            ></textarea>
          </div>
          <div style="display: flex; gap: 0.5rem;">
            <button class="submit-button" onclick="submitReply('${comentario.id}')" style="padding: 0.5rem 1rem; font-size: 0.85rem; background: linear-gradient(135deg, #e8b4d4 0%, #f5d4e6 100%); color: #6b4a5a; border: 1.5px solid #d87ba7; border-radius: 0.5rem; font-weight: 600; font-family: 'Poppins', sans-serif; cursor: pointer;">
              Enviar respuesta
            </button>
            <button class="cancel-reply" onclick="hideReplyForm('${comentario.id}')">
              Cancelar
            </button>
          </div>
        </div>
      `;

      const fecha = new Date(comentario.fecha);
      const fechaTexto = fecha.toLocaleDateString('es-ES', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });

      div.innerHTML = `
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem; padding-bottom: 0.75rem; border-bottom: 1px solid #f5d4e6;">
          <span style="font-weight: 600; color: #d87ba7; font-family: 'Poppins', sans-serif; font-size: 0.95rem;">${escapeHtml(comentario.nombre)}</span>
          <span style="font-size: 0.8rem; color: #b89aa8; font-family: 'Poppins', sans-serif;">${fechaTexto}</span>
        </div>
        <p style="color: #9f7091; font-family: 'Poppins', sans-serif; font-size: 0.95rem; line-height: 1.6; margin: 0 0 0.75rem 0;">${escapeHtml(comentario.texto)}</p>
        <button class="reply-button" onclick="showReplyForm('${comentario.id}')">
          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polyline points="9 10 4 15 9 20"></polyline>
            <path d="M20 4v7a4 4 0 0 1-4 4H4"></path>
          </svg>
          Responder
        </button>
        ${replyFormHTML}
        ${respuestasHTML}
      `;

      console.log('üîß HTML generado para comentario:', comentario.id);
      console.log('üìù Formulario de respuesta incluido:', !!replyFormHTML);
      console.log('üìã Respuestas incluidas:', respuestasHTML ? 'S√≠' : 'No');

      commentsList.appendChild(div);
      console.log('‚úÖ Comentario agregado al DOM');
    }

    function escapeHtml(texto) {
      const div = document.createElement('div');
      div.textContent = texto;
      return div.innerHTML;
    }

    function formatDate(dateString) {
      const fecha = new Date(dateString);
      return fecha.toLocaleDateString('es-ES', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });
    }

    // Funciones globales para respuestas
    window.showReplyForm = function(commentId) {
      console.log('üìù Mostrando formulario de respuesta para:', commentId);

      // Ocultar otros formularios abiertos
      document.querySelectorAll('.reply-form.active').forEach(form => {
        form.classList.remove('active');
      });

      const replyForm = document.getElementById(`reply-form-${commentId}`);
      if (replyForm) {
        replyForm.classList.add('active');
        const textarea = document.getElementById(`reply-text-${commentId}`);
        if (textarea) {
          textarea.focus();
        }
      }
    };

    window.hideReplyForm = function(commentId) {
      const replyForm = document.getElementById(`reply-form-${commentId}`);
      if (replyForm) {
        replyForm.classList.remove('active');
        // Limpiar campos
        const nameInput = document.getElementById(`reply-name-${commentId}`);
        const textInput = document.getElementById(`reply-text-${commentId}`);
        if (nameInput) nameInput.value = '';
        if (textInput) textInput.value = '';
      }
    };

    window.submitReply = function(commentId) {
      const nameInput = document.getElementById(`reply-name-${commentId}`);
      const textInput = document.getElementById(`reply-text-${commentId}`);

      let nombre = nameInput?.value?.trim() || 'An√≥nimo';
      const texto = textInput?.value?.trim();

      if (!texto) {
        alert('Por favor, escribe una respuesta antes de enviar.');
        return;
      }

      // Guardar respuesta en localStorage
      const clave = 'comentarios_' + window.location.pathname;
      const comentariosGuardados = JSON.parse(localStorage.getItem(clave) || '[]');

      const comentarioIndex = comentariosGuardados.findIndex(c => c.id === commentId);
      if (comentarioIndex !== -1) {
        if (!comentariosGuardados[comentarioIndex].respuestas) {
          comentariosGuardados[comentarioIndex].respuestas = [];
        }

        const respuesta = {
          id: Date.now().toString(),
          nombre: nombre,
          texto: texto,
          fecha: new Date().toISOString()
        };

        comentariosGuardados[comentarioIndex].respuestas.push(respuesta);
        localStorage.setItem(clave, JSON.stringify(comentariosGuardados));

        // Recargar comentarios para mostrar la nueva respuesta
        commentsList.innerHTML = '';
        comentariosGuardados.forEach(mostrarComentario);

        // Enviar email de respuesta
        enviarEmailRespuesta(comentarioIndex, comentariosGuardados, respuesta);

        console.log('‚úÖ Respuesta guardada y mostrada');
      }
    };

    function enviarEmailRespuesta(comentarioIndex, comentariosGuardados, respuesta) {
      const formData = new FormData();
      formData.append('access_key', 'ac372efb-3a75-42da-9aa0-a90846659aa4');
      formData.append('subject', 'üí¨ Nueva respuesta en el blog');
      formData.append('from_name', 'Blog Maaz-Peaches');
      formData.append('name', respuesta.nombre);
      formData.append('comment', `Respuesta a: "${comentariosGuardados[comentarioIndex].texto.substring(0, 100)}..."\n\n${respuesta.texto}`);
      formData.append('page_url', window.location.href);

      fetch('https://api.web3forms.com/submit', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => console.log('üìß Email de respuesta enviado:', data))
      .catch(error => console.warn('‚ö†Ô∏è Error al enviar email de respuesta:', error));
    }

    console.log('‚úÖ Todas las funciones registradas');
    console.log('üîß showReplyForm:', typeof window.showReplyForm);
    console.log('üîß hideReplyForm:', typeof window.hideReplyForm);
    console.log('üîß submitReply:', typeof window.submitReply);

    function enviarEmail(comentario) {
      console.log('üìß Enviando email...');

      const formData = new FormData();
      formData.append('access_key', 'ac372efb-3a75-42da-9aa0-a90846659aa4');
      formData.append('subject', 'üí¨ Nuevo comentario en el blog');
      formData.append('from_name', 'Blog Maaz-Peaches');
      formData.append('name', comentario.nombre);
      formData.append('comment', comentario.texto);
      formData.append('page_url', window.location.href);

      fetch('https://api.web3forms.com/submit', {
        method: 'POST',
        body: formData
      })
      .then(response => {
        console.log('‚úÖ Email enviado exitosamente');
        return response.json();
      })
      .then(data => console.log('üì® Respuesta del servidor:', data))
      .catch(error => {
        console.warn('‚ö†Ô∏è Error al enviar email:', error);
      });
    }
  }

  // Ejecutar inmediatamente si el DOM ya est√° listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initComments);
  } else {
    initComments();
  }
</script>
