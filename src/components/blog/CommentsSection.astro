---
// Componente de secci√≥n de comentarios est√©tica
---

<section class="comments-section">
  <div class="comments-header">
    <h3 class="comments-title">Comentarios</h3>
    <p class="comments-subtitle">Si no te sientes escuchado, aqu√≠ tienes el espacio perfecto. No te escucharemos, pero ten por seguro que te leer√©</p>
  </div>

  <div class="comment-form-container">
    <form class="comment-form" id="commentForm" action="https://api.web3forms.com/submit" method="POST">
      <input type="hidden" name="access_key" value="ac372efb-3a75-42da-9aa0-a90846659aa4">
      <input type="hidden" name="subject" value="üí¨ Nuevo comentario en el blog">
      <input type="hidden" name="from_name" value="Blog Maaz-Peaches">
      <input type="hidden" name="redirect" value="false">

      <div class="form-group">
        <label for="name">Nombre</label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          placeholder="Tu nombre (o d√©jalo vac√≠o para comentar an√≥nimamente)" 
        />
      </div>
      
      <div class="form-group">
        <label for="comment">Comentario</label>
        <textarea 
          id="comment" 
          name="comment" 
          rows="4" 
          placeholder="Escribe tu comentario aqu√≠..." 
          required
        ></textarea>
      </div>
      
      <button type="submit" class="submit-button">
        <span class="button-text">Enviar comentario</span>
        <svg class="button-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="22" y1="2" x2="11" y2="13"></line>
          <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
        </svg>
      </button>
    </form>
  </div>

  <div class="comments-list" id="commentsList">
    <p class="no-comments">S√© el primero en comentar</p>
  </div>
</section>

<script>
  // Sistema ultra simple que funciona garantizado
  console.log('üöÄ Iniciando comentarios...');

  // Ejecutar inmediatamente sin esperar eventos
  (function() {
    console.log('üìù Configurando formulario...');

    const form = document.getElementById('commentForm');
    const commentsList = document.getElementById('commentsList');

    if (!form || !commentsList) {
      console.error('‚ùå Elementos no encontrados');
      console.log('Form:', form);
      console.log('CommentsList:', commentsList);
      return;
    }

    console.log('‚úÖ Elementos encontrados, configurando...');

    // Cargar comentarios guardados
    loadComments();

    // Manejar env√≠o
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      console.log('üî• Formulario enviado');

      const nameInput = document.getElementById('name');
      const commentInput = document.getElementById('comment');

      const nombre = nameInput?.value?.trim() || 'An√≥nimo';
      const texto = commentInput?.value?.trim();

      if (!texto) {
        alert('Por favor, escribe un comentario');
        return;
      }

      console.log('üíæ Procesando:', nombre, texto);

      // Crear comentario
      const comentario = {
        nombre: nombre,
        texto: texto,
        fecha: new Date().toISOString()
      };

      // Mostrar inmediatamente
      mostrarComentario(comentario);

      // Guardar en localStorage
      guardarComentario(comentario);

      // Limpiar formulario
      form.reset();

      // Enviar email
      enviarEmail(comentario);

      console.log('‚úÖ Comentario procesado');
    });

    function loadComments() {
      const clave = 'comentarios_' + window.location.pathname;
      const comentarios = JSON.parse(localStorage.getItem(clave) || '[]');

      if (comentarios.length > 0) {
        // Remover mensaje "no comments"
        const noCommentsMsg = commentsList.querySelector('.no-comments');
        if (noCommentsMsg) {
          noCommentsMsg.remove();
        }

        comentarios.forEach(mostrarComentario);
      }
    }

    function mostrarComentario(comentario) {
      const div = document.createElement('div');
      div.className = 'comment-item';

      const fecha = new Date(comentario.fecha);
      const fechaTexto = fecha.toLocaleDateString('es-ES', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });

      div.innerHTML = `
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.75rem; padding-bottom: 0.75rem; border-bottom: 1px solid #f5d4e6;">
          <span style="font-weight: 600; color: #d87ba7; font-family: 'Poppins', sans-serif; font-size: 0.95rem;">${escapeHtml(comentario.nombre)}</span>
          <span style="font-size: 0.8rem; color: #b89aa8; font-family: 'Poppins', sans-serif;">${fechaTexto}</span>
        </div>
        <p style="color: #9f7091; font-family: 'Poppins', sans-serif; font-size: 0.95rem; line-height: 1.6; margin: 0;">${escapeHtml(comentario.texto)}</p>
      `;

      // Aplicar estilos CSS
      div.style.cssText = 'padding: 1.25rem; margin-bottom: 1rem; background: #ffffff; border: 2px solid #f5d4e6; border-radius: 1rem; transition: all 0.3s ease;';

      commentsList.appendChild(div);
    }

    function guardarComentario(comentario) {
      const clave = 'comentarios_' + window.location.pathname;
      const comentarios = JSON.parse(localStorage.getItem(clave) || '[]');
      comentarios.push(comentario);
      localStorage.setItem(clave, JSON.stringify(comentarios));
    }

    function escapeHtml(text) {
      return text
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
    }

    function enviarEmail(comentario) {
      console.log('üìß Enviando email...');

      const formData = new FormData();
      formData.append('access_key', 'ac372efb-3a75-42da-9aa0-a90846659aa4');
      formData.append('subject', 'üí¨ Nuevo comentario en el blog');
      formData.append('from_name', 'Blog Maaz-Peaches');
      formData.append('name', comentario.nombre);
      formData.append('comment', comentario.texto);
      formData.append('page_url', window.location.href);
      formData.append('redirect', 'false');

      fetch('https://api.web3forms.com/submit', {
        method: 'POST',
        body: formData
      })
      .then(response => {
        console.log('‚úÖ Email enviado');
        return response.json();
      })
      .then(data => console.log('üì® Respuesta:', data))
      .catch(error => {
        console.warn('‚ö†Ô∏è Error email:', error);
      });
    }

    console.log('‚úÖ Sistema configurado y listo');
  })();
</script>
